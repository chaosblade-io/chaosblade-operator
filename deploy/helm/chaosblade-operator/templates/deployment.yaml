apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: chaosblade-tool
  namespace: {{ .Release.Namespace }}
spec:
  minReadySeconds: 5
  selector:
    matchLabels:
      app: chaosblade-tool
  template:
    metadata:
      labels:
        app: chaosblade-tool
        part-of: chaosblade
      name: chaosblade-tool
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
      containers:
        - image: {{ .Values.blade.repository }}:{{ .Values.blade.version }}
          imagePullPolicy: {{ .Values.blade.pullPolicy }}
          name: chaosblade-tool
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-socket
            - mountPath: /opt/chaosblade/chaosblade.dat
              name: chaosblade-db-volume
            - mountPath: /etc/hosts
              name: hosts
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: docker-socket
        - hostPath:
            path: /opt/chaosblade/chaosblade.dat
            type: FileOrCreate
          name: chaosblade-db-volume
        - hostPath:
            path: /etc/hosts
          name: hosts
  updateStrategy:
    type: RollingUpdate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaosblade-operator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: chaosblade-operator
  template:
    metadata:
      labels:
        name: chaosblade-operator
        part-of: chaosblade
    spec:
      serviceAccountName: chaosblade
      containers:
        - name: chaosblade-operator
          image: {{ .Values.operator.repository }}:{{ .Values.operator.version }}
          command: ["chaosblade-operator"]
          args:
          {{- if .Values.env.zapLevel }}
          - '--zap-level={{ .Values.env.zapLevel }}'
          {{- end }}
          {{- if .Values.blade.version }}
          - '--blade-version={{ .Values.blade.version }}'
          {{- end }}
          {{- if .Values.blade.repository }}
          - '--image-repo={{ .Values.blade.repository }}'
          {{- end }}
          {{- if .Values.blade.pullPolicy }}
          - '--pull-policy={{ .Values.blade.pullPolicy }}'
          {{- end }}
          - '--namespace={{ .Release.Namespace }}'
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "chaosblade-operator"
